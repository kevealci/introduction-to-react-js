{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoList/index.js","TodoSearch/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","Modal/index.js","TodosLoading/index.js","EmptyTodos/index.js","App/AppUI.js","App/Index.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","React","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLocaleLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","toggleCompleteTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoList","TodoSearch","placeholder","onChange","event","console","log","target","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","CreateTodoButton","Modal","ReactDOM","createPortal","document","getElementById","TodosLoading","speed","width","height","viewBox","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","EmptyTodos","AppUI","map","App","render"],"mappings":"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","file":"static/js/main.c4344beb.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nconst TodoContext = createContext()\n\nfunction TodoProvider(props) {\n\n\tconst {\n\t\titem: todos,\n\t\tsaveItem: saveTodos,\n\t\tloading,\n\t\terror\n\t} = useLocalStorage('TODOS_V1', [])\n\n\tconst [searchValue, setSearchValue] = useState(\"\");\n\n\tconst [openModal, setOpenModal] = useState(false);\n\n\tconst completedTodos = todos.filter(todo => todo.completed).length;\n\n\tconst totalTodos = todos.length;\n\n\tlet searchedTodos = [];\n\n\tif (!searchValue.length >= 1) {\n\t\tsearchedTodos = todos;\n\t} else {\n\t\tsearchedTodos = todos.filter(todo => {\n\t\t\tconst todoText = todo.text.toLocaleLowerCase()\n\t\t\tconst searchText = searchValue.toLocaleLowerCase()\n\t\t\treturn todoText.includes(searchText);\n\t\t})\n\n\t}\n\n\tconst addTodo = (text) => {\n\t\tconst newTodos = [...todos]\n\t\tnewTodos.push({\n\t\t\tcompleted: false,\n\t\t\ttext: text,\n\t\t})\n\t\tsaveTodos(newTodos) \n\t}\n\n\tconst toggleCompleteTodo = (text) => {\n\t\tconst todoIndex = todos.findIndex(todo => todo.text === text);\n\t\tconst newTodos = [...todos]\n\t\tnewTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n\t\tsaveTodos(newTodos)\n\t}\n\n\tconst deleteTodo = (text) => {\n\t\tconst todoIndex = todos.findIndex(todo => todo.text === text);\n\t\tconst newTodos = [...todos]\n\t\tnewTodos.splice(todoIndex, 1)\n\t\tsaveTodos(newTodos)\n\t}\n\n\treturn (\n\n\t\t<TodoContext.Provider value={{\n\t\t\tloading,\n\t\t\terror,\n\t\t\ttotalTodos,\n\t\t\tcompletedTodos,\n\t\t\taddTodo,\n\t\t\tsearchValue,\n\t\t\tsetSearchValue,\n\t\t\tsearchedTodos,\n\t\t\ttoggleCompleteTodo,\n\t\t\tdeleteTodo,\n\t\t\topenModal,\n\t\t\tsetOpenModal,\n\t\t}}>\n\n\t\t\t{props.children}\n\n\t\t</TodoContext.Provider>\n\n\t)\n}\n\n\nexport { TodoContext, TodoProvider }","import React, {useState} from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n    const [error, setError] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [item, setItem] = useState(initialValue);\n  \n    React.useEffect(() => {\n      setTimeout(() => {\n  \n        try {\n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n          if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue))\n            parsedItem = initialValue\n          } else {\n            parsedItem = JSON.parse(localStorageItem)\n          }\n          setItem(parsedItem)\n          setLoading(false)\n        } catch (error) {\n          setError(error)\n        }\n      }, 3000)\n    }, [])\n  \n    const saveItem = (newItem) => {\n      try {\n        const stringifiedItem = JSON.stringify(newItem)\n        localStorage.setItem(itemName, stringifiedItem)\n        setItem(newItem)\n      } catch (error) {\n        setError(error)\n      }\n    }\n  \n    return {\n      item,\n      saveItem,\n      loading,\n      error\n    }\n  \n  }\n\n  export {useLocalStorage}","import React, {useContext} from \"react\";\nimport {TodoContext} from '../TodoContext'\nimport \"./TodoCounter.css\"\n\n\nfunction TodoCounter() {\n\n    const {totalTodos, completedTodos} = useContext(TodoContext);\n\n    return (\n        <h2 className=\"TodoCounter\">You have complete {completedTodos} to {totalTodos} TODOs</h2>\n    );\n}\n\nexport { TodoCounter };","import React from \"react\";\nimport \"./TodoList.css\"\n\nfunction TodoList(props){\n    return(\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport {TodoList};","import React,{useContext} from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoSearch.css\"\n\n\nfunction TodoSearch(){\n\n\tconst {searchValue, setSearchValue} = useContext(TodoContext);\n\n\tconst onSearchValueChange = (event) => {\n\t\tconsole.log(event.target.value);\n    setSearchValue(event.target.value)\n\t}\n\n\treturn (\n\t\t\n\t\t<input \n\t\t\tclassName=\"TodoSearch\" \n\t\t\tplaceholder=\"Search your ToDo\" \n      value={searchValue}\n\t\t\tonChange={onSearchValueChange}\n\t\t/>\n\n\t);\n\n\t\n}\n\nexport {TodoSearch};","import React from \"react\";\nimport \"./TodoItem.css\"\n\nfunction TodoItem(props) {\n\n    return (\n        <li className=\"TodoItem\">\n            <span\n                className={`Icon Icon-check ${props.completed && \"Icon-check--active\"}`}\n                onClick={props.onComplete}\n            >\n                {props.completed ? '✔': '⛔'}\n            </span>\n\n            <p\n                className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}\n            >\n                {props.text}\n            </p>\n\n            <span \n                className=\"Icon Icon-delete\"\n                onClick={props.onDelete}\n            >\n                ✖\n            </span>\n        </li>\n    );\n}\n\nexport { TodoItem };","import React, { useContext, useState } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoForm.css'\n\nfunction TodoForm() {\n\n    const [newTodoValue, setNewTodoValue] = useState('');\n\n    const {\n        addTodo,\n        setOpenModal,\n    } = useContext(TodoContext);\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value)\n    }\n\n    const onCancel = () => {\n        setOpenModal(false);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n\n            <label>Write your new ToDo</label>\n\n            <textarea\n                value={newTodoValue}\n                onChange={onChange}\n                placeholder='Practice a lot with React'\n            />\n            <div className='TodoForm-buttonContainer'>\n                <button\n                    className=\"TodoForm-button TodoForm-button--cancel\"\n                    type='button'\n                    onClick={onCancel}\n                >\n                    Cancel\n                </button>\n\n                <button\n                    type='submit'\n                    className=\"TodoForm-button TodoForm-button--add\"\n                >\n                    Add\n                </button>\n            </div>\n\n        </form>\n    );\n\n}\n\nexport { TodoForm };","import React from \"react\";\nimport \"./CreateTodoButton.css\"\n\nfunction CreateTodoButton({openModal, setOpenModal}) {\n\n    const onClickButton = () => {\n        setOpenModal(!openModal)\n    }\n\n    return (\n\n        <button\n            className=\"CreateTodoButton\"\n            onClick={onClickButton}\n        >\n\n            +\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './Modal.css'\n\nfunction Modal({children}){\n\n    return ReactDOM.createPortal(\n\n        <div className='ModalBackground'>\n            \n            {children}\n\n        </div>,\n\n        document.getElementById('modal')\n      );\n\n\n}\n\nexport {Modal};\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\nimport './TodosLoading.css'\n\nconst TodosLoading = (props) => (\n    <ContentLoader \n    className='Loading'\n    speed={2}\n    width={700}\n    height={150}\n    viewBox=\"0 0 700 150\"\n    backgroundColor=\"#f1e4e4\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <circle cx=\"34\" cy=\"42\" r=\"30\" /> \n    <rect x=\"74\" y=\"10\" rx=\"5\" ry=\"5\" width=\"528\" height=\"64\" /> \n    <circle cx=\"34\" cy=\"114\" r=\"30\" /> \n    <rect x=\"74\" y=\"82\" rx=\"5\" ry=\"5\" width=\"528\" height=\"64\" />\n  </ContentLoader>\n)\n\nexport {TodosLoading};","import React from \"react\"\nimport './EmptyTodos.css'\n\nfunction EmptyTodos(){\n  return <p className='Empty'>¡Create your first ToDo!</p>\n}\n\nexport {EmptyTodos};","import React, { useContext } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoForm } from \"../TodoForm\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { Modal } from '../Modal'\nimport {TodosLoading} from \"../TodosLoading\";\nimport { EmptyTodos } from \"../EmptyTodos\";\n\nfunction AppUI() {\n\n\tconst {\n\t\terror,\n\t\tloading,\n\t\tsearchedTodos,\n\t\ttoggleCompleteTodo,\n\t\tdeleteTodo,\n\t\topenModal,\n\t\tsetOpenModal,\n\t} = useContext(TodoContext);\n\n\treturn (\n\n\t\t<>\n\t\t\t<TodoCounter />\n\t\t\t<TodoSearch />\n\n\t\t\t<TodoList>\n\n\t\t\t\t{error && <p>Desespérate, hubo un error...</p>}\n\t\t\t\t{loading && <TodosLoading/>}\n\t\t\t\t{(!loading && !searchedTodos.length) && <EmptyTodos/>}\n\n\n\t\t\t\t{searchedTodos.map(todo => (\n\n\t\t\t\t\t<TodoItem\n\t\t\t\t\t\tkey={todo.text}\n\t\t\t\t\t\ttext={todo.text}\n\t\t\t\t\t\tcompleted={todo.completed}\n\t\t\t\t\t\tonComplete={() => toggleCompleteTodo(todo.text)}\n\t\t\t\t\t\tonDelete={() => deleteTodo(todo.text)}\n\t\t\t\t\t/>\n\n\t\t\t\t))}\n\n\t\t\t</TodoList>\n\n\t\t\t{openModal && (\n\t\t\t\t<Modal>\n\t\t\t\t\t<TodoForm />\n\t\t\t\t</Modal>\n\t\t\t)}\n\n\t\t\t<CreateTodoButton\n\t\t\t\tsetOpenModal={setOpenModal}\n\t\t\t\topenModal={openModal}\n\t\t\t/>\n\n\t\t</>\n\n\t);\n}\n\nexport { AppUI };","import React, { useState } from \"react\";\nimport { TodoProvider } from \"../TodoContext\";\nimport { AppUI } from \"./AppUI\";\n\nimport './App.css';\n\nconst defaultTodos = [\n  { text: \"Cortar cebolla\", completed: false },\n  { text: \"Tomar el curso de Intro a React\", completed: true },\n  { text: \"Llorar con la llorona\", completed: true },\n  { text: \"Probando\", completed: false },\n]\n\nfunction App() {\n\n  return (\n\n    <TodoProvider>\n\n      <AppUI />\n\n    </TodoProvider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/Index';\n//import './index.css';\n\n\nReactDOM.render(\n\n  <App />,\n  document.getElementById('root')\n\n);\n\n\n"],"sourceRoot":""}